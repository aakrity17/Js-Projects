<!-- In this example above, this refers to the person object
I.E this.firstName means the firstName property of this.
i.e this.firstName means the firstName property of person.
* What is this?
In JavaScript, the this keyword refers to an object.
Which object depends on how this is being invoked (used or called).
The this keyword refers to different objects depending on how it is used:
In an object method, this refers to the object.
Alone, this refers to the global object.
In a function, this refers to the global object.
In a function, in strict mode, this is undefined.
In an event, this refers to the element that received the event.
Methods like call(), apply(), and bind() can refer this to any o
-->
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Objects</h2>
<p>An object method is a function definition, stored as a property value.</p>
<p id="demo"></p>
<script>
//Create an object
const person ={
firstName: "Akrity",
lastName:  "Chapagai",
id: 1,
fullName: function() {
return this.firstName + " " + this.lastName;
}
};
//Display data from the object:
document.getElementById("demo").innerHTML = person.fullName();
</script>
</body>
</html>

